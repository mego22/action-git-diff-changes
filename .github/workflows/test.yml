---
name: Test this action

on: [push]

jobs:
  test_action:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for changes
        id: diff
        run: |
          # See https://github.community/t/check-pushed-file-changes-with-git-diff-tree-in-github-actions/17220/10
          DEFAULT_BRANCH=$( git symbolic-ref refs/remotes/origin/HEAD | awk -F "/" '{print $NF}' )
          FIRST_COMMIT=$( git log --pretty=format:%H origin/${{ DEFAULT_BRANCH }}.. | tail -n 1 )
          CURRENT_COMMIT=$( git log --pretty=format:%H origin/${{ DEFAULT_BRANCH }}.. | head -n 1 )
          export DIFF=$( git diff --name-only $FIRST_COMMIT $CURRENT_COMMIT )
          echo "$DIFF"
          # Escape newlines (replace \n with %0A)
          echo "::set-output name=diff::$( echo "$DIFF" | sed ':a;N;$!ba;s/\n/%0A/g' )"

      - name: Set matrix for build
        id: set-matrix
        run: |
          # See https://stackoverflow.com/a/62953566/11948346
          DIFF="${{ steps.diff.outputs.diff }}"
          JSON="{\"include\":["

          # Loop by lines
          while read path; do
            # Set $directory to substring before /
            directory="$( echo $path | cut -d'/' -f1 -s )"

            if [ -z "$directory" ]; then
              continue # Exclude root directory
            elif [ "$directory" == docs ]; then
              continue # Exclude docs directory
            elif [ "$path" == *.rst ]; then
              continue # Exclude *.rst files
            fi

            # Add build to the matrix only if it is not already included
            JSONline="{\"directory\": \"$directory\"},"
            if [[ "$JSON" != *"$JSONline"* ]]; then
              JSON="$JSON$JSONline"
            fi
          done <<< "$DIFF"

          # Remove last "," and add closing brackets
          if [[ $JSON == *, ]]; then
            JSON="${JSON%?}"
          fi
          JSON="$JSON]}"
          echo $JSON

          # Set output
          echo "::set-output name=matrix::$( echo "$JSON" )"
